<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd


			http://code.alibabatech.com/schema/dubbo
			http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- 当前应用名称，用于注册中心计算应用间依赖关系，注意：消费者和提供者应用名不要一样 -->
    <dubbo:application name="dubbo-consumer"/>
    <!-- 连接服务注册中心zookeeper ip为zookeeper所在服务器的ip地址-->
    <dubbo:registry address="zookeeper://192.168.25.201:2181"/>

    <!--    dubbo消费端在启动的时候时候要检查消费端已经启动:如果没有启动，那么，服务消费者也无法正常启动-->
    <!--等同于注解中@Reference(check = false, loadbalance = "roundrobin", timeout = 1000,retries = 3)-->
<!--    <dubbo:consumer check="false"  loadbalance="roundrobin"  timeout="1000"  retries="1"></dubbo:consumer>-->


    <!--    Reference 将会根据接口生成本地代理，实现与远程服务进行交互，实现远程调用- -->
    <dubbo:annotation package="cn.ali.controller"/>

    <!-- 不使用@reference注解时候,引用远程服务代理，可以和本地bean一样使用helloService -->
    <dubbo:reference id="helloService" interface="cn.ali.dubo.service.HelloService"/>
</beans>